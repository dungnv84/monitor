apiVersion: v1
kind: ServiceAccount
metadata:
  name: consul-server
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-server-config
  namespace: kube-system  
  labels:
    app.kubernetes.io/name: consul-server
    app.kubernetes.io/instance: consul-server
    component: server
data:
  config.hcl: |-
    # General
    data_dir = "/consul/data"
    log_level = "INFO"
    disable_update_check = true

    # Server
    server = true
    ui_config {
      enabled = true
    }
    domain = "merchant-account"
    bind_addr = "0.0.0.0"
    client_addr = "0.0.0.0"
    datacenter = "server"
    enable_local_script_checks = true
    performance {
      raft_multiplier = 1
    }
    dns_config {
      allow_stale = true
    }

    # Telemetry
    telemetry {
      prometheus_retention_time = "30s"
    }

    # Cluster
    bootstrap_expect = 1
    leave_on_terminate = true
    rejoin_after_leave = true
    skip_leave_on_interrupt = true
    start_join = ["localhost"]
    retry_join = ["localhost"]
  acl.hcl: |-
    acl = {
      enabled = false
      default_policy = "deny"
      enable_token_persistence = true
    }

---
apiVersion: v1
kind: Service
metadata:
  name: consul-server
  namespace: kube-system
  labels:
    app.kubernetes.io/name: consul-server
    app.kubernetes.io/instance: consul-server
    component: server
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 8500
      protocol: TCP
      targetPort: 8500
    - name: dns
      port: 8600
      protocol: UDP
      targetPort: 8600
  selector:
    app.kubernetes.io/name: consul-server
    app.kubernetes.io/instance: consul-server
    component: server
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: consul-server
  namespace: kube-system  
  labels:
    app.kubernetes.io/name: consul-server
    app.kubernetes.io/instance: consul-server
    component: server
spec:
  serviceName: consul-server
  podManagementPolicy: Parallel
  replicas: 1
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app.kubernetes.io/name: consul-server
      app.kubernetes.io/instance: consul-server
      component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: consul-server
        app.kubernetes.io/instance: consul-server
        component: server
    spec:
      serviceAccountName: consul-server
      containers:
        - name: consul
          image: hashicorp/consul
          imagePullPolicy: IfNotPresent
          args:
          - "agent"
          - "-config-dir=/etc/consul.d"
          securityContext:
            allowPrivilegeEscalation: false
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONSUL_HTTP_ADDR
              value: "http://$(POD_IP):8500"
          volumeMounts:
            - name: data
              mountPath: /consul/data
            - name: config
              mountPath: /etc/consul.d
          ports:
            - containerPort: 8500
              name: http
            - containerPort: 8600
              name: dns
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 5 && kill -SIGTERM $(pidof consul)"]
      volumes:
        - name: config
          configMap:
            name: consul-server-config
        - name: data
          hostPath:
            path: /data/consul-server
            type: DirectoryOrCreate